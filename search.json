[{"path":"https://numbats.github.io/airpurifyr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://numbats.github.io/airpurifyr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). airpurifyr: Package (One Line, Title Case). R package version 0.0.0.9000, https://numbats.github.io/airpurifyr/.","code":"@Manual{,   title = {airpurifyr: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://numbats.github.io/airpurifyr/}, }"},{"path":[]},{"path":"https://numbats.github.io/airpurifyr/reference/get_measurements_for_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Get air quality measurements for a location — get_measurements_for_location","title":"Get air quality measurements for a location — get_measurements_for_location","text":"Gets set air quality measurements OpenAQ API. can filter location, date, type station","code":""},{"path":"https://numbats.github.io/airpurifyr/reference/get_measurements_for_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get air quality measurements for a location — get_measurements_for_location","text":"","code":"get_measurements_for_location(   country = \"\",   city = \"\",   location = \"\",   date_from = Sys.Date() - 365,   date_to = Sys.Date(),   is_mobile = FALSE,   max_observations = 1000,   ... )"},{"path":"https://numbats.github.io/airpurifyr/reference/get_measurements_for_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get air quality measurements for a location — get_measurements_for_location","text":"country Two-character ISO country code city String city interest location smaller-geographical identifier (..e suburb) date_from Date observations start (converted UTC) date_to Date observations end (converted UTC) is_mobile Include mobile station types max_observations Number observations returned per page. Larger numbers mean less API calls single server load. ... Extra API parameters. Note must name-value pairs, values must type character.","code":""},{"path":"https://numbats.github.io/airpurifyr/reference/get_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Air Quality Measures — get_measures","title":"Get Air Quality Measures — get_measures","text":"function extracts air quality measures parsed API response.","code":""},{"path":"https://numbats.github.io/airpurifyr/reference/get_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Air Quality Measures — get_measures","text":"","code":"get_measures(req_cont)"},{"path":"https://numbats.github.io/airpurifyr/reference/get_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Air Quality Measures — get_measures","text":"req_cont list containing parsed API response. location data stored second element list.","code":""},{"path":"https://numbats.github.io/airpurifyr/reference/get_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Air Quality Measures — get_measures","text":"tibble containing air quality measures columns location ID, location name, parameter name, measured value, date time measurement (UTC), unit measurement, latitude, longitude, country, city.","code":""},{"path":"https://numbats.github.io/airpurifyr/reference/get_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Air Quality Measures — get_measures","text":"","code":"# Sample usage: library(tibble) library(purrr) library(lubridate) #>  #> Attaching package: ‘lubridate’ #> The following objects are masked from ‘package:base’: #>  #>     date, intersect, setdiff, union  # Sample parsed API response req_cont <- content(response, \"parsed\") #> Error in content(response, \"parsed\"): could not find function \"content\"  # Get air quality measures measures <- get_measures(req_cont) #> Error in get_measures(req_cont): could not find function \"get_measures\""}]
